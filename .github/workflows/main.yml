name: Hprofile Actions
on: 
  workflow_dispatch
env:
  AWS_REGION: ap-south-1

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Testing workflow
        run: echo "workflow works!"

      - name: Checkout
        uses: actions/checkout@v4 

      - name: Run Maven Tests
        run: mvn test
      
      - name: Run Checkstyle
        run: mvn checkstyle:checkstyle
      
      # Setup Java 11 as the default Java version
      - name: Set Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # Setup SonarQube Scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7
        
      # Run SonarQube Scanner
      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.login="${{ secrets.SONAR_TOKEN }}" \
            -Dsonar.organization="rohitsharma740" \
            -Dsonar.projectKey="rohitsharma740_actionscode" \
            -Dsonar.sources=src/main/java \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.junit.reportPaths=target/surefire-reports \
            -Dsonar.jacoco.reportPaths=target/jacoco.exec \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.java.checkstyle.reportPaths=target/site/checkstyle-result.xml
     # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
  
  BUILD_AND_PUBLISH:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 

      - name: Update application.properties file 
        run: |
          sed -i "s/^jdbc.username.*$/jdbc.username=${{ secrets.RDS_USER }}/" src/main/resources/application.properties
          sed -i "s/^jdbc.password.*$/jdbc.password=${{ secrets.RDS_PASSWORD }}/" src/main/resources/application.properties
          sed -i "s/db01/${{ secrets.RDS_ENDPOINT }}/" src/main/resources/application.properties

      - name: upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          #cache_from: ${{ secrets.cache }}
          repo: gitops
          region: ${{ env.AWS_REGION }}
          tags: latest, ${{ github.run_number }}
          #auto_tag: true
          daemon_off: false
          dockerfile: ./Dockerfile
          context: ./


